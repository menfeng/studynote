2.7.9
1gtecfa5 grade
pool
	4kb
	free的时候用做指针
arena
	256kb
	usedpools 是全局数组
	pool:
		free
		used
		full
	arena:
		unsed
		usable:orederd  -->free
		full
		内存不是预先申请,也没有直接相连
malloc
	if used:
		if pool.full
			unlink used

	if not used:
		usable-->unused-->malloc arena
			  -->malloc pools
		pool=free
		if arena.full:
			unlink usable
		link used

free
	if pool.full:
		link used
	else:
		if not pool.free:
			return
		if free==1:
			link usable
		elif free==all:
			freememory
			link unsed
		else:
			sort usable
gc
	root object
	int seven 0

list
	<halt reduce


装饰器，然后装饰后就可以，打印执行此函数前后的存储对象差异
是否可以具体到哪个bufenter暂用了多少K？
=======================
class A:?
	pass
a=A()--12,16
1.block<pool<arena
2.malloc
3.1 del a-->free
3.2 del->refcont->不能解决循环引用
4.
	a=rang(1000000)
	del a
	gc.collect():为什么合并每一代？rootobject？
4.1int
4.2str
4.3list
4.4dict

=======================


*****************有空可以再去确认下gc的所有object里都没有thread的id  get_objects() 
sys.getrefcount(sys.modules)
3
len(gc.get_referrers(sys.modules))

开场内存动画
2.全局设计
3.ppt和动画设计  flash的代码在移动硬盘上
	目前的想法是动画的图全通过flash来画，注意测试不要黑屏幕
	最先是静态的然后变成动态的
		1.做出元素，矩形，圆形，箭头
		2.属性：文字，边框颜色，填充颜色，大小
		3.动画，动画过程也是脚本
			出现(v,x,y)
			消失(v)
			连接(v1,v2)
			取消连接(v1,v2)

演练下看要花多少时间
看py2.5的垃圾是否会回收
看引擎用的哪个版本的python
要想到哪些是大家关注的(和工作相关的，比如垃圾回收) 其他的看起来高深大家未必关系，因为大家额觉得你这个东西没有用
要想为什么，回答不出的就最好不要讲
他们可能更关心int这些的缓存:第一部分可以再复习下
need:
	类的创建过程要好好看看，这些类到底消耗了多少，包括方法
	long_lived_pending
	reload问题
	更新问题
	visio 宏
	>>> class C(object):
	def __del__(self):
		print 1
>>> a=A();b=A();c=C()
>>> a.a=b;b.b=a;a.c=c;
>>> del a;del b;del c;
>>> gc.collect(2)



PEP 353 -- Using ssize_t as the index type
A new type Py_ssize_t is introduced, which has the same size as the compiler's size_t type, but is signed. It will be a typedef for ssize_t where available.

alignment=8? 32位，64位相关？
syatempagesize 4kb  内存页？

一次内存分配之旅
一次内存回收之旅
一次垃圾回收之旅
0 0 1 1
	p-->1A
	n-->1B
	P-->p=last
	P-->n=last
	1A=P
	1B=P


WITH_MEMORY_LIMITS 控制着是否要限制


直观说明引用计数的实时释放
再直观演示循环引用的问题
再说明怎么解决了循环引用的问题
再直观看到解决循环引用问题后怎么得到的回收

__del__的直观体现garbage
分清reachable unreachable garbage 以及为什么是garbage的原因
分析下del操作以及退出作用域之后的销毁
引用计数需要额外的内存开销
时间消耗分摊在整个运行期间
1.何时分配
	a=1 no
2.怎么分配
	mallo
3.何时释放
	del a
4.怎么释放
	free()
gc模块
其他体会
	如果你想真正的去学一个东西，学的时候的目标是学完后能清晰的，有逻辑的把这个东西讲给别人听

几种基本类型的缓存，和size变化的时候，内存分配的策略，直观体现，可编译时参数指定的也要指出来，放PPT上不用说
有空再看弱引用
!!!!!!!!!!!!PPT动态演示,考虑模仿算法数据结构的gif演示？教学嘛就是这样
flash画出静态图，然后忽然全都动起来了


整数的这里还有点疑问PyInt_ClearFreeList:整数子类也会放到这里面？small_int为什么不在smallint却在blocklist(可以试验下int的子类)
